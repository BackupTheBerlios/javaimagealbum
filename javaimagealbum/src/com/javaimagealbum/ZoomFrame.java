/*
 * ZoomFrame.java
 *
 * Created on June 7, 2004, 9:37 PM
 */

package com.javaimagealbum;

import java.awt.Cursor;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

/**
 *
 * @author  mroth
 * @author  Mirko Actis
 */
public class ZoomFrame extends javax.swing.JFrame {
    
    /** Creates new form ZoomFrame */
    public ZoomFrame() {
        initComponents();
        setIconImage( new javax.swing.ImageIcon(
            getClass().getResource(
            "/com/javaimagealbum/images/icon.png")
            ).getImage());

        // Load cursors:
        ImageIcon openHandImageIcon = new ImageIcon(getClass().getResource(
            "/com/javaimagealbum/images/handopencursor.gif"));
        openHandCursor = Toolkit.getDefaultToolkit().createCustomCursor(
            openHandImageIcon.getImage(), new Point(8, 8), "openHand");
            
        ImageIcon closedHandImageIcon = new ImageIcon(getClass().getResource(
            "/com/javaimagealbum/images/" + 
            "handclosedcursor.gif"));
        closedHandCursor = Toolkit.getDefaultToolkit().createCustomCursor(
            closedHandImageIcon.getImage(), new Point(8, 8), "closedHand");
        
        // For better wheel and scrollbar responsiveness
        spScroll.getVerticalScrollBar().setUnitIncrement(25);
        spScroll.getHorizontalScrollBar().setUnitIncrement(25);
        
        lblImage.setCursor(Cursor.getDefaultCursor());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        spScroll = new javax.swing.JScrollPane();
        lblImage = new javax.swing.JLabel();

        setTitle("Zoom");
        setBackground(java.awt.Color.white);
        setIconImage(getIconImage());
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        spScroll.setBackground(java.awt.Color.white);
        spScroll.setOpaque(false);
        lblImage.setBackground(new java.awt.Color(255, 255, 255));
        lblImage.setFont(new java.awt.Font("SansSerif", 0, 12));
        lblImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblImageMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lblImageMouseReleased(evt);
            }
        });
        lblImage.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblImageMouseDragged(evt);
            }
        });

        spScroll.setViewportView(lblImage);

        getContentPane().add(spScroll, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblImageMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseReleased
        if(!loading) {
            lblImage.setCursor(openHandCursor);
        }
    }//GEN-LAST:event_lblImageMouseReleased

    private Point dragStart = null;
    private Point dragEnd = null;
    
    private void lblImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMousePressed
        if(!loading) {
            dragStart = evt.getPoint();
            int x = spScroll.getHorizontalScrollBar().getValue();
            int y = spScroll.getVerticalScrollBar().getValue();
            lblImage.setCursor(closedHandCursor);
        }
    }//GEN-LAST:event_lblImageMousePressed

    private void lblImageMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMouseDragged
        if(!loading) {
            dragEnd = evt.getPoint();
            int x = spScroll.getHorizontalScrollBar().getValue();
            int y = spScroll.getVerticalScrollBar().getValue();
            spScroll.getHorizontalScrollBar().setValue(
                x - (dragEnd.x - dragStart.x));
            spScroll.getVerticalScrollBar().setValue(
                y - (dragEnd.y - dragStart.y));
        }
    }//GEN-LAST:event_lblImageMouseDragged
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
    }//GEN-LAST:event_exitForm
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lblImage;
    private javax.swing.JScrollPane spScroll;
    // End of variables declaration//GEN-END:variables
    
    private BufferedImage image;
    private ImageIcon imageIcon = new ImageIcon();
    private File prevFile = null;
    
    private Cursor openHandCursor;
    private Cursor closedHandCursor;
    private boolean loading = true;
    
    public void setImage(final File file) {
        if(prevFile != file) {
            prevFile = file;
            loading = true;
            this.lblImage.setText("Loading...");
            this.lblImage.setIcon(null);
            this.lblImage.setCursor(Cursor.getDefaultCursor());
            if(image != null) {
                image.flush();
                image = null;
            }
            new Thread() {
                public void run() {
                    try {
                        image = GUIUtils.loadImageFromFile(file, image, null, 
                            null);
                        SwingUtilities.invokeLater(
                            new Runnable() {
                                public void run() {
                                    loading = false;
                                    imageIcon.setImage(image);
                                    lblImage.setText("");
                                    lblImage.setCursor(openHandCursor);
                                    lblImage.setIcon(imageIcon);
                                }
                            });
                    }
                    catch(IOException e) {
                        lblImage.setText("Image not found.");
                    }
                }
            }.start();
        }
    }
}
